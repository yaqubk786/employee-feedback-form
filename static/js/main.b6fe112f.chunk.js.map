{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","username","setUserName","department","setDepartment","rating","setRating","data","setData","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","min","max","length","map","item","index","style","paddingRight","paddingLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAmEeA,MAhEf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAgBA,OAEE,sBAAKC,UAAU,MAAf,UACA,wDACE,uBAAMC,SAlBW,SAACC,GACpBA,EAAEC,iBACCX,GAAYI,GAAUF,GACvBK,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAChBN,SAAUA,EACVI,OAAQA,EACRF,WAAYA,MAIhBD,EAAY,IACZE,EAAc,IACdE,EAAU,IAMR,UACE,8CACA,uBAAOO,KAAK,OAAOC,YAAY,aAC/BC,MAAOd,EAAUe,SAAU,SAACL,GAAD,OAAOT,EAAYS,EAAEM,OAAOF,UACvD,uBACA,uBACA,gDACA,uBAAOF,KAAK,OAAOC,YAAY,mBAC/BC,MAAOZ,EAAYa,SAAU,SAACL,GAAD,OAAOP,EAAcO,EAAEM,OAAOF,UAC3D,uBACA,uBACA,+CACA,uBAAOF,KAAK,SAASK,IAAI,IAAIC,IAAI,IAAIV,UAAU,SAASK,YAAY,aACnEC,MAAOV,EAAQW,SAAU,SAACL,GAAD,OAAOL,EAAUK,EAAEM,OAAOF,UACpD,uBACA,uBACA,wBAAQF,KAAK,SAAb,uBAEF,qBAAKJ,UAAU,eAAf,SAEIF,EAAKa,OAAS,EACZb,EAAKc,KAAI,SAACC,EAAKC,GACb,OACE,sBAAKd,UAAU,OAAf,UACE,oBAAGe,MAAO,CAACC,aAAa,QAAxB,mBAAwCH,EAAKrB,YAC7C,+CAAmBqB,EAAKnB,cACxB,oBAAGqB,MAAO,CAACE,YAAY,QAAvB,uBAA2CJ,EAAKjB,YAHvBkB,MAQ9B,WC9CEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6fe112f.chunk.js","sourcesContent":["import react,{useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [username, setUserName] = useState(\"\")\n  const [department, setDepartment] = useState(\"\")\n  const [rating, setRating] = useState(0)\n  const [data, setData] = useState([])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(username && rating && department){\n      setData([...data, {\n        username: username,\n        rating: rating,\n        department: department\n      }])\n    }\n\n    setUserName('')\n    setDepartment('')\n    setRating(0)\n  }\n  return (\n  \n    <div className=\"App\">\n    <h1>Employee FeedBack Form</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Username </label>\n        <input type='text' placeholder=\"enter name\"\n        value={username} onChange={(e) => setUserName(e.target.value)}/>\n        <br/>\n        <br/>\n        <label>Department </label>\n        <input type='text' placeholder=\"enter department\"\n        value={department} onChange={(e) => setDepartment(e.target.value)}/>\n        <br/>\n        <br/>\n        <label >Rating    </label>\n        <input type='number' min=\"0\" max=\"5\" className=\"rating\" placeholder=\"enter name\"\n         value={rating} onChange={(e) => setRating(e.target.value)}/>\n        <br/>\n        <br/>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div className='display-data'>\n      {\n          data.length > 0? (\n            data.map((item,index) => {\n              return(\n                <div className='data' key={index}>\n                  <p style={{paddingRight:'20px'}}>Name: {item.username}</p>\n                  <p >| Department: {item.department}</p>\n                  <p style={{paddingLeft:'20px'}}>| Rating: {item.rating}</p>\n                  \n                </div>\n              )\n            })\n          ): null\n        }\n      </div>\n    </div>\n  );\n}\n    \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}